/*
 * File: app/controller/EquipmentController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('smart.controller.EquipmentController', {
    extend: 'Ext.app.Controller',

    onEquipmentListItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var equip=Ext.create('smart.view.EquipmentDetail');
                equip.show();
    },

    onEquipmentWithUserItemDblClick: function(dataview, record, item, index, e, eOpts) {
        Ext.Msg.show({
            title:'提示',
            msg: '确定要取消是被与该用户的关联吗？',
            buttons: Ext.Msg.YESNO,
            icon: Ext.Msg.QUESTION,
            fn: function(btn) {
                if (btn === 'yes') {
                    console.log('Yes pressed');
                } else{
                    console.log('No pressed');
                }
            }
        });
    },

    onDeleteSelectedEquipmentBtnClick: function(button, e, eOpts) {
        Ext.Msg.show({
            title:'提示',
            msg: '确定要删除设备吗？',
            buttons: Ext.Msg.YESNOCANCEL,
            icon: Ext.Msg.QUESTION,
            fn: function(btn) {
                if (btn === 'yes') {
                    console.log('Yes pressed');
                } else if (btn === 'no') {
                    console.log('No pressed');
                } else {
                    console.log('Cancel pressed');
                }
            }
        });
    },

    onCanfirmEquipmentAddClick: function(button, e, eOpts) {

    },

    onCancenEquipmentAddClick: function(button, e, eOpts) {
         button.up('window').destroy();
    },

    onAddEquipmentClick: function(button, e, eOpts) {
        var equip=Ext.create('smart.view.AddNewEquipment');
                        equip.show();
    },

    onDeleteEquipmentClick: function(button, e, eOpts) {

    },

    onEquipmentAfterRender: function(component, eOpts) {
        //获取系统所有设备的基本统计信息

                console.log(component);
                //Ajax获取
                 Ext.Ajax.request({
                            url: 'EquipmentAction',
                            params: {

                            },
                            success: function(response){
                                content = response.responseText;

                                //接收到的数据转化成Data对象，送给Form

                                var datejson=Ext.JSON.decode(content);
                                console.log(datejson);
                                component.getForm().setValues(datejson);

                            },
                            failure: function(response, opts) {
                                console.log('server-side failure with status code ' + response.status);
                            }
                        });
    },

    init: function(application) {
        this.control({
            "#EquipmentList": {
                itemdblclick: this.onEquipmentListItemDblClick
            },
            "#EquipmentWithUser": {
                itemdblclick: this.onEquipmentWithUserItemDblClick
            },
            "#DeleteSelectedEquipmentBtn": {
                click: this.onDeleteSelectedEquipmentBtnClick
            },
            "#CanfirmEquipmentAdd": {
                click: this.onCanfirmEquipmentAddClick
            },
            "#CancenEquipmentAdd": {
                click: this.onCancenEquipmentAddClick
            },
            "#AddEquipment": {
                click: this.onAddEquipmentClick
            },
            "#DeleteEquipment": {
                click: this.onDeleteEquipmentClick
            },
            "#Equipment": {
                afterrender: this.onEquipmentAfterRender
            }
        });
    }

});
