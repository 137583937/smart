/*
 * File: app/view/MyGridPanel2.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('smart.view.MyGridPanel2', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygridpanel2',

    requires: [
        'Ext.grid.View',
        'Ext.grid.column.Number',
        'Ext.grid.column.Boolean',
        'Ext.grid.column.Date'
    ],

    height: 250,
    width: 454,
    title: 'My Grid Panel',
    store: 'UserModels',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'id',
                    text: 'ID'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'name',
                    text: 'Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'pwd',
                    text: 'Pwd'
                },
                {
                    xtype: 'booleancolumn',
                    dataIndex: 'isonline',
                    text: 'Isonline'
                },
                {
                    xtype: 'datecolumn',
                    dataIndex: 'lasttime',
                    text: 'Lasttime',
                    format: 'm/j/Y'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'lastip',
                    text: 'Lastip'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'amount',
                    text: 'Amount',
                    format: '00'
                }
            ]
        });

        me.callParent(arguments);
    }

});